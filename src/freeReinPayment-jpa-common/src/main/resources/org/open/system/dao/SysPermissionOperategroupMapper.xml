<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.open.system.dao.SysPermissionOperategroupMapper" >
  <resultMap id="BaseResultMap" type="org.open.system.model.SysPermissionOperategroup" >
    <id column="group_row_id" property="groupRowId" jdbcType="VARCHAR" />
    <result column="group_id" property="groupId" jdbcType="VARCHAR" />
    <result column="row_id" property="rowId" jdbcType="VARCHAR" />
    <result column="check_status" property="checkStatus" jdbcType="TINYINT" />
    <result column="fore_back_type" property="foreBackType" jdbcType="TINYINT" />
    <result column="is_enable" property="isEnable" jdbcType="TINYINT" />
    <result column="is_deleted" property="isDeleted" jdbcType="TINYINT" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_on" property="createOn" jdbcType="TIMESTAMP" />
    <result column="create_by_name" property="createByName" jdbcType="VARCHAR" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="update_on" property="updateOn" jdbcType="TIMESTAMP" />
    <result column="update_by_name" property="updateByName" jdbcType="VARCHAR" />
    <result column="platform_id" property="platformId" jdbcType="VARCHAR" />
    <result column="data_permission_id" property="dataPermissionId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    group_row_id, group_id, row_id, check_status, fore_back_type, is_enable, is_deleted,
    create_by, create_on, create_by_name, update_by, update_on, update_by_name, platform_id,
    data_permission_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from sys_permission_operategroup
    where group_row_id = #{groupRowId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sys_permission_operategroup
    where group_row_id = #{groupRowId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="org.open.system.model.SysPermissionOperategroup" >
    insert into sys_permission_operategroup (group_row_id, group_id, row_id,
    check_status, fore_back_type, is_enable,
    is_deleted, create_by, create_on,
    create_by_name, update_by, update_on,
    update_by_name, platform_id, data_permission_id
    )
    values (#{groupRowId,jdbcType=VARCHAR}, #{groupId,jdbcType=VARCHAR}, #{rowId,jdbcType=VARCHAR},
    #{checkStatus,jdbcType=TINYINT}, #{foreBackType,jdbcType=TINYINT}, #{isEnable,jdbcType=TINYINT},
    #{isDeleted,jdbcType=TINYINT}, #{createBy,jdbcType=VARCHAR}, #{createOn,jdbcType=TIMESTAMP},
    #{createByName,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}, #{updateOn,jdbcType=TIMESTAMP},
    #{updateByName,jdbcType=VARCHAR}, #{platformId,jdbcType=VARCHAR}, #{dataPermissionId,jdbcType=VARCHAR}
    )
  </insert>
  <insert id="insertSelective" parameterType="org.open.system.model.SysPermissionOperategroup" >
    insert into sys_permission_operategroup
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="groupRowId != null" >
        group_row_id,
      </if>
      <if test="groupId != null" >
        group_id,
      </if>
      <if test="rowId != null" >
        row_id,
      </if>
      <if test="checkStatus != null" >
        check_status,
      </if>
      <if test="foreBackType != null" >
        fore_back_type,
      </if>
      <if test="isEnable != null" >
        is_enable,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createOn != null" >
        create_on,
      </if>
      <if test="createByName != null" >
        create_by_name,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateOn != null" >
        update_on,
      </if>
      <if test="updateByName != null" >
        update_by_name,
      </if>
      <if test="platformId != null" >
        platform_id,
      </if>
      <if test="dataPermissionId != null" >
        data_permission_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="groupRowId != null" >
        #{groupRowId,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="rowId != null" >
        #{rowId,jdbcType=VARCHAR},
      </if>
      <if test="checkStatus != null" >
        #{checkStatus,jdbcType=TINYINT},
      </if>
      <if test="foreBackType != null" >
        #{foreBackType,jdbcType=TINYINT},
      </if>
      <if test="isEnable != null" >
        #{isEnable,jdbcType=TINYINT},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createOn != null" >
        #{createOn,jdbcType=TIMESTAMP},
      </if>
      <if test="createByName != null" >
        #{createByName,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateOn != null" >
        #{updateOn,jdbcType=TIMESTAMP},
      </if>
      <if test="updateByName != null" >
        #{updateByName,jdbcType=VARCHAR},
      </if>
      <if test="platformId != null" >
        #{platformId,jdbcType=VARCHAR},
      </if>
      <if test="dataPermissionId != null" >
        #{dataPermissionId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.open.system.model.SysPermissionOperategroup" >
    update sys_permission_operategroup
    <set >
      <if test="groupId != null" >
        group_id = #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="rowId != null" >
        row_id = #{rowId,jdbcType=VARCHAR},
      </if>
      <if test="checkStatus != null" >
        check_status = #{checkStatus,jdbcType=TINYINT},
      </if>
      <if test="foreBackType != null" >
        fore_back_type = #{foreBackType,jdbcType=TINYINT},
      </if>
      <if test="isEnable != null" >
        is_enable = #{isEnable,jdbcType=TINYINT},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createOn != null" >
        create_on = #{createOn,jdbcType=TIMESTAMP},
      </if>
      <if test="createByName != null" >
        create_by_name = #{createByName,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateOn != null" >
        update_on = #{updateOn,jdbcType=TIMESTAMP},
      </if>
      <if test="updateByName != null" >
        update_by_name = #{updateByName,jdbcType=VARCHAR},
      </if>
      <if test="platformId != null" >
        platform_id = #{platformId,jdbcType=VARCHAR},
      </if>
      <if test="dataPermissionId != null" >
        data_permission_id = #{dataPermissionId,jdbcType=VARCHAR},
      </if>
    </set>
    where group_row_id = #{groupRowId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.open.system.model.SysPermissionOperategroup" >
    update sys_permission_operategroup
    set group_id = #{groupId,jdbcType=VARCHAR},
      row_id = #{rowId,jdbcType=VARCHAR},
      check_status = #{checkStatus,jdbcType=TINYINT},
      fore_back_type = #{foreBackType,jdbcType=TINYINT},
      is_enable = #{isEnable,jdbcType=TINYINT},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_on = #{createOn,jdbcType=TIMESTAMP},
      create_by_name = #{createByName,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_on = #{updateOn,jdbcType=TIMESTAMP},
      update_by_name = #{updateByName,jdbcType=VARCHAR},
      platform_id = #{platformId,jdbcType=VARCHAR},
      data_permission_id = #{dataPermissionId,jdbcType=VARCHAR}
    where group_row_id = #{groupRowId,jdbcType=VARCHAR}
  </update>

  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <update id="deleteSysPermissionOperategroup" parameterType="org.open.system.model.SysPermissionOperategroup">
    update sys_permission_operategroup
    <set >
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateOn != null" >
        update_on = #{updateOn,jdbcType=TIMESTAMP},
      </if>
      <if test="updateByName != null" >
        update_by_name = #{updateByName,jdbcType=VARCHAR},
      </if>
    </set>
    where is_deleted = 0
    AND is_enable = 1
    AND fore_back_type = #{foreBackType,jdbcType=TINYINT}
    AND group_id = #{groupId,jdbcType=VARCHAR}
  </update>

  <select id="getSysPermissionOperategroupByGroupId" resultMap="BaseResultMap">
    SELECT group_row_id,row_id, group_id,check_status FROM
    sys_permission_operategroup
    WHERE is_deleted = 0
    AND is_enable = 1
    AND fore_back_type = #{foreBackType,jdbcType=INTEGER}
    AND group_id = #{groupId,jdbcType=VARCHAR}
  </select>
</mapper>