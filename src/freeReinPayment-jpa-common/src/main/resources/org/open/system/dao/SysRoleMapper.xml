<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.open.system.dao.SysRoleMapper" >
  <resultMap id="BaseResultMap" type="org.open.system.model.SysRole" >
    <id column="role_id" property="roleId" jdbcType="VARCHAR" />
    <result column="organ_id" property="organId" jdbcType="VARCHAR" />
    <result column="group_id" property="groupId" jdbcType="VARCHAR" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="organ_full_id" property="organFullId" jdbcType="VARCHAR" />
    <result column="comments" property="comments" jdbcType="VARCHAR" />
    <result column="role_user_md5" property="roleUserMd5" jdbcType="VARCHAR" />
    <result column="role_datapermission_md5" property="roleDatapermissionMd5" jdbcType="VARCHAR" />
    <result column="fore_back_type" property="foreBackType" jdbcType="TINYINT" />
    <result column="is_enable" property="isEnable" jdbcType="TINYINT" />
    <result column="is_deleted" property="isDeleted" jdbcType="TINYINT" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_on" property="createOn" jdbcType="TIMESTAMP" />
    <result column="create_by_name" property="createByName" jdbcType="VARCHAR" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="update_on" property="updateOn" jdbcType="TIMESTAMP" />
    <result column="update_by_name" property="updateByName" jdbcType="VARCHAR" />
    <result column="platform_id" property="platformId" jdbcType="VARCHAR" />
    <result column="data_permission_id" property="dataPermissionId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    role_id, organ_id, group_id, role_name, organ_full_id, comments, role_user_md5, role_datapermission_md5,
    fore_back_type, is_enable, is_deleted, create_by, create_on, create_by_name, update_by,
    update_on, update_by_name, platform_id, data_permission_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from sys_role
    where role_id = #{roleId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sys_role
    where role_id = #{roleId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="org.open.system.model.SysRole" >
    insert into sys_role (role_id, organ_id, group_id,
    role_name, organ_full_id, comments,
    role_user_md5, role_datapermission_md5, fore_back_type,
    is_enable, is_deleted, create_by,
    create_on, create_by_name, update_by,
    update_on, update_by_name, platform_id,
    data_permission_id)
    values (#{roleId,jdbcType=VARCHAR}, #{organId,jdbcType=VARCHAR}, #{groupId,jdbcType=VARCHAR},
    #{roleName,jdbcType=VARCHAR}, #{organFullId,jdbcType=VARCHAR}, #{comments,jdbcType=VARCHAR},
    #{roleUserMd5,jdbcType=VARCHAR}, #{roleDatapermissionMd5,jdbcType=VARCHAR}, #{foreBackType,jdbcType=TINYINT},
    #{isEnable,jdbcType=TINYINT}, #{isDeleted,jdbcType=TINYINT}, #{createBy,jdbcType=VARCHAR},
    #{createOn,jdbcType=TIMESTAMP}, #{createByName,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR},
    #{updateOn,jdbcType=TIMESTAMP}, #{updateByName,jdbcType=VARCHAR}, #{platformId,jdbcType=VARCHAR},
    #{dataPermissionId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.open.system.model.SysRole" >
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="organId != null" >
        organ_id,
      </if>
      <if test="groupId != null" >
        group_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="organFullId != null" >
        organ_full_id,
      </if>
      <if test="comments != null" >
        comments,
      </if>
      <if test="roleUserMd5 != null" >
        role_user_md5,
      </if>
      <if test="roleDatapermissionMd5 != null" >
        role_datapermission_md5,
      </if>
      <if test="foreBackType != null" >
        fore_back_type,
      </if>
      <if test="isEnable != null" >
        is_enable,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createOn != null" >
        create_on,
      </if>
      <if test="createByName != null" >
        create_by_name,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateOn != null" >
        update_on,
      </if>
      <if test="updateByName != null" >
        update_by_name,
      </if>
      <if test="platformId != null" >
        platform_id,
      </if>
      <if test="dataPermissionId != null" >
        data_permission_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="organId != null" >
        #{organId,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="organFullId != null" >
        #{organFullId,jdbcType=VARCHAR},
      </if>
      <if test="comments != null" >
        #{comments,jdbcType=VARCHAR},
      </if>
      <if test="roleUserMd5 != null" >
        #{roleUserMd5,jdbcType=VARCHAR},
      </if>
      <if test="roleDatapermissionMd5 != null" >
        #{roleDatapermissionMd5,jdbcType=VARCHAR},
      </if>
      <if test="foreBackType != null" >
        #{foreBackType,jdbcType=TINYINT},
      </if>
      <if test="isEnable != null" >
        #{isEnable,jdbcType=TINYINT},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createOn != null" >
        #{createOn,jdbcType=TIMESTAMP},
      </if>
      <if test="createByName != null" >
        #{createByName,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateOn != null" >
        #{updateOn,jdbcType=TIMESTAMP},
      </if>
      <if test="updateByName != null" >
        #{updateByName,jdbcType=VARCHAR},
      </if>
      <if test="platformId != null" >
        #{platformId,jdbcType=VARCHAR},
      </if>
      <if test="dataPermissionId != null" >
        #{dataPermissionId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.open.system.model.SysRole" >
    update sys_role
    <set >
      <if test="organId != null" >
        organ_id = #{organId,jdbcType=VARCHAR},
      </if>
      <!--故意去掉判断，就是需要可添加null-->
      group_id = #{groupId,jdbcType=VARCHAR},
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="organFullId != null" >
        organ_full_id = #{organFullId,jdbcType=VARCHAR},
      </if>
      <if test="comments != null" >
        comments = #{comments,jdbcType=VARCHAR},
      </if>
      <if test="roleUserMd5 != null" >
        role_user_md5 = #{roleUserMd5,jdbcType=VARCHAR},
      </if>
      <if test="roleDatapermissionMd5 != null" >
        role_datapermission_md5 = #{roleDatapermissionMd5,jdbcType=VARCHAR},
      </if>
      <if test="foreBackType != null" >
        fore_back_type = #{foreBackType,jdbcType=TINYINT},
      </if>
      <if test="isEnable != null" >
        is_enable = #{isEnable,jdbcType=TINYINT},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createOn != null" >
        create_on = #{createOn,jdbcType=TIMESTAMP},
      </if>
      <if test="createByName != null" >
        create_by_name = #{createByName,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateOn != null" >
        update_on = #{updateOn,jdbcType=TIMESTAMP},
      </if>
      <if test="updateByName != null" >
        update_by_name = #{updateByName,jdbcType=VARCHAR},
      </if>
      <if test="platformId != null" >
        platform_id = #{platformId,jdbcType=VARCHAR},
      </if>
      <if test="dataPermissionId != null" >
        data_permission_id = #{dataPermissionId,jdbcType=VARCHAR},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.open.system.model.SysRole" >
    update sys_role
    set organ_id = #{organId,jdbcType=VARCHAR},
    group_id = #{groupId,jdbcType=VARCHAR},
    role_name = #{roleName,jdbcType=VARCHAR},
    organ_full_id = #{organFullId,jdbcType=VARCHAR},
    comments = #{comments,jdbcType=VARCHAR},
    role_user_md5 = #{roleUserMd5,jdbcType=VARCHAR},
    role_datapermission_md5 = #{roleDatapermissionMd5,jdbcType=VARCHAR},
    fore_back_type = #{foreBackType,jdbcType=TINYINT},
    is_enable = #{isEnable,jdbcType=TINYINT},
    is_deleted = #{isDeleted,jdbcType=TINYINT},
    create_by = #{createBy,jdbcType=VARCHAR},
    create_on = #{createOn,jdbcType=TIMESTAMP},
    create_by_name = #{createByName,jdbcType=VARCHAR},
    update_by = #{updateBy,jdbcType=VARCHAR},
    update_on = #{updateOn,jdbcType=TIMESTAMP},
    update_by_name = #{updateByName,jdbcType=VARCHAR},
    platform_id = #{platformId,jdbcType=VARCHAR},
    data_permission_id = #{dataPermissionId,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=VARCHAR}
  </update>
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~-->

  <!--分页-->
  <select id="selectSysRoleByPage" resultMap="BaseResultMap">
    SELECT
    role_id, role_name, create_on,is_enable
    FROM
    sys_role
    <where>
      is_deleted = 0
      AND
      is_enable = 1
      AND
      fore_back_type = #{role.foreBackType,jdbcType=TINYINT}
      <if test="role.roleName != null and '' != role.roleName ">
        AND role_name LIKE
        CONCAT('%',#{role.roleName,jdbcType=VARCHAR},'%')
      </if>
    </where>
    ORDER BY ${args.sortOrderName}
    limit #{args.pageIndex,jdbcType=INTEGER}
    ,#{args.pageSize,jdbcType=INTEGER};
  </select>

  <select id="selectSysRoleByPageCount" resultType="java.lang.Integer">
    SELECT
    COUNT(role_id)
    FROM
    sys_role
    <where>
      is_deleted = 0
      AND
      is_enable = 1
      AND
      fore_back_type = #{role.foreBackType,jdbcType=TINYINT}
      <if test="role.roleName != null and '' != role.roleName ">
        AND role_name LIKE
        CONCAT('%',#{role.roleName,jdbcType=VARCHAR},'%')
      </if>
    </where>
  </select>

  <select id="selectGroupIdByRole" resultMap="BaseResultMap">
    <foreach collection="items" index="index" item="tag" separator="union">
      select group_id from sys_role
      WHERE is_enable=1
      and  is_deleted=0
      and fore_back_type = #{foreBackType,jdbcType=TINYINT}
      and role_id = #{tag,jdbcType=VARCHAR}
    </foreach>
  </select>
</mapper>