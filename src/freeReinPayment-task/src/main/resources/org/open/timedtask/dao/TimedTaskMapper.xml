<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.open.timedtask.dao.TimedTaskMapper" >
  <resultMap id="BaseResultMap" type="org.open.task.model.TimedTask" >
    <id column="task_id" property="taskId" jdbcType="INTEGER" />
    <result column="task_name" property="taskName" jdbcType="VARCHAR" />
    <result column="execute_time" property="executeTime" jdbcType="VARCHAR" />
    <result column="is_start" property="isStart" jdbcType="INTEGER" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    task_id, task_name, execute_time, is_start, remarks, name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from timed_task
    where task_id = #{taskId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from timed_task
    where task_id = #{taskId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.open.task.model.TimedTask" >
    insert into timed_task (task_id, task_name, execute_time,
      is_start, remarks, name
      )
    values (#{taskId,jdbcType=INTEGER}, #{taskName,jdbcType=VARCHAR}, #{executeTime,jdbcType=VARCHAR},
      #{isStart,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.open.task.model.TimedTask" >
    insert into timed_task
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="taskId != null" >
        task_id,
      </if>
      <if test="taskName != null" >
        task_name,
      </if>
      <if test="executeTime != null" >
        execute_time,
      </if>
      <if test="isStart != null" >
        is_start,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="name != null" >
        name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="taskId != null" >
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="taskName != null" >
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="executeTime != null" >
        #{executeTime,jdbcType=VARCHAR},
      </if>
      <if test="isStart != null" >
        #{isStart,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.open.task.model.TimedTask" >
    update timed_task
    <set >
      <if test="taskName != null" >
        task_name = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="executeTime != null" >
        execute_time = #{executeTime,jdbcType=VARCHAR},
      </if>
      <if test="isStart != null" >
        is_start = #{isStart,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
    </set>
    where task_id = #{taskId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.open.task.model.TimedTask" >
    update timed_task
    set task_name = #{taskName,jdbcType=VARCHAR},
      execute_time = #{executeTime,jdbcType=VARCHAR},
      is_start = #{isStart,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR}
    where task_id = #{taskId,jdbcType=INTEGER}
  </update>

  <!--查询需要启动的定时任务-->
  <select id="getTimedTaskList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from timed_task
    where  is_start = 1
  </select>

  <!--根据定时任务名称查询定时任务-->
  <select id="selectByPrimaryTaskName" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from timed_task
    where  task_name = #{taskName,jdbcType=VARCHAR}
  </select>
  <!--根据定时任务名称更新定时时间-->
  <update id="updateByPrimaryTaskName" parameterType="org.open.task.model.TimedTask" >
    update timed_task
    <set >
      <if test="executeTime != null" >
        execute_time = #{executeTime,jdbcType=VARCHAR},
      </if>
      <if test="isStart != null" >
        is_start = #{isStart,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=INTEGER},
      </if>
    </set>
    where task_name = #{taskName,jdbcType=VARCHAR}
  </update>

  <!--分页-->
  <select id="selectTimedTaskByPage" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM
    timed_task
    <where>
      <if test="timedTask.taskName != null and  timedTask.taskName != ''">
        AND task_name LIKE
        CONCAT('%',#{timedTask.taskName,jdbcType=VARCHAR},'%'),
      </if>
      <if test="timedTask.isStart != null and  timedTask.isStart != ''">
        and is_start = #{timedTask.isStart,jdbcType=INTEGER},
      </if>
    </where>
    ORDER BY ${args.sortOrderName}
    limit #{args.pageIndex,jdbcType=INTEGER}
    ,#{args.pageSize,jdbcType=INTEGER};
  </select>

  <select id="selectTimedTaskByPageCount" resultType="java.lang.Integer">
    SELECT  COUNT(task_id)
    FROM timed_task
    <where>
      <if test="timedTask.taskName != null and  timedTask.taskName != ''">
        AND task_name LIKE
        CONCAT('%',#{timedTask.taskName,jdbcType=VARCHAR},'%'),
      </if>
      <if test="timedTask.isStart != null and  timedTask.isStart != ''">
        and is_start = #{timedTask.isStart,jdbcType=INTEGER},
      </if>
    </where>
  </select>
</mapper>